[{"E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\index.js":"1","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\App.js":"2","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\reportWebVitals.js":"3","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\components\\OldYoutubeForm.js":"4","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\components\\YoutubeForm.js":"5","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\components\\TextError.js":"6"},{"size":517,"mtime":1607717210397,"results":"7","hashOfConfig":"8"},{"size":261,"mtime":1607730164715,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1607717210400,"results":"10","hashOfConfig":"8"},{"size":2718,"mtime":1607730229317,"results":"11","hashOfConfig":"8"},{"size":7746,"mtime":1607801629922,"results":"12","hashOfConfig":"8"},{"size":191,"mtime":1607717210396,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1q9vgcy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\index.js",[],["29","30"],"E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\App.js",["31"],"\r\nimport './App.css';\r\nimport OldYoutubeForm from './components/OldYoutubeForm';\r\nimport YoutubeForm from './components/YoutubeForm';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <YoutubeForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\reportWebVitals.js",[],"E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\components\\OldYoutubeForm.js",["32"],"import React from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    email: '',\r\n    channel: ''\r\n}\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form data', values)\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required('Required!'),\r\n    email: Yup.string()\r\n        .email('Invalid email format')\r\n        .required('Required!'),\r\n    channel: Yup.string().required('Required!')\r\n})\r\nconst validate = values => {\r\n    // let errors = {}\r\n    // if (!values.name) {\r\n    //     errors.name = 'Required'\r\n    // }\r\n    // if (!values.email) {\r\n    //     errors.email = 'Required'\r\n    // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    //     errors.email = 'Invalid email format'\r\n    // }\r\n\r\n    // if (!values.channel) {\r\n    //     errors.channel = 'Required'\r\n    // }\r\n\r\n\r\n    // return errors\r\n\r\n}\r\nfunction OldYoutubeForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n        // validate\r\n    })\r\n\r\n    console.log('Visited Field', formik.touched)\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input type='text' id='name' name='name' onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}></input>\r\n                    {formik.touched.name && formik.errors.name ? <div className='error'>{formik.errors.name}</div> : null}\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>Email</label>\r\n                    <input type='email' id='email' name='email' onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur} value={formik.values.email}></input>\r\n                    {formik.touched.email && formik.errors.email ? <div className='error'>{formik.errors.email}</div> : null}\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label htmlFor='name'>Channel</label>\r\n                    <input type='text' id='channel' name='channel' onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur} value={formik.values.channel}></input>\r\n                    {formik.touched.channel && formik.errors.channel ? <div className='error'>{formik.errors.channel}</div> : null}\r\n                </div>\r\n                <button type='Submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OldYoutubeForm","E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\components\\YoutubeForm.js",["33"],"E:\\ProjectRepo\\ReactJs\\myFormikDemo\\src\\components\\TextError.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":22},{"ruleId":"38","severity":1,"message":"42","line":23,"column":7,"nodeType":"40","messageId":"41","endLine":23,"endColumn":15},{"ruleId":"38","severity":1,"message":"43","line":114,"column":34,"nodeType":"40","messageId":"41","endLine":114,"endColumn":38},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'OldYoutubeForm' is defined but never used.","Identifier","unusedVar","'validate' is assigned a value but never used.","'form' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]